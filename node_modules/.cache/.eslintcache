[{"/Users/maxmohammadi/CSC307/JobMe/src/index.js":"1","/Users/maxmohammadi/CSC307/JobMe/src/components/Application.js":"2","/Users/maxmohammadi/CSC307/JobMe/src/components/Header.js":"3","/Users/maxmohammadi/CSC307/JobMe/src/components/Navbar.js":"4"},{"size":189,"mtime":1612823582459,"results":"5","hashOfConfig":"6"},{"size":5428,"mtime":1612855855316,"results":"7","hashOfConfig":"6"},{"size":1269,"mtime":1612853861503,"results":"8","hashOfConfig":"6"},{"size":3785,"mtime":1612859904444,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1woo1br",{"filePath":"13","messages":"14","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/maxmohammadi/CSC307/JobMe/src/index.js",[],["21","22"],"/Users/maxmohammadi/CSC307/JobMe/src/components/Application.js",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport styles from '../assets/Styles.module.css' ;\nimport Header from './Header.js';\nimport NavigationBar from './Navbar.js';\n\n// defines the space that contains the three columns of applications\nclass ApplicationLog extends React.Component{\n    // backend : figure out how to initalize this\n    state = { applications: [] };\n\n    // filter by status - done in backend?\n    get_ToDo = () => {\n        return this.applications;\n    }\n\n    // get_InProgress()\n\n    // get_Completed()\n\n    // update this to only pass filtered applications\n    render() {\n        return (\n            <div>\n                <NavigationBar />\n                <Header />\n                <div className={styles.row}>\n                    <div className={styles.thirdcolumn} >\n                        <ApplicationStatusColumn_ToDo status='To Do' applications={this.state.applications}/>\n                    </div>\n                    <div className={styles.thirdcolumn} >\n                        <ApplicationStatusColumn_InProgress applications={this.state.applications}/>\n                    </div>\n                    <div className={styles.thirdcolumn} >\n                        <ApplicationStatusColumn_Completed applications={this.state.applications}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// defines one row of applications, organized by type\nclass ApplicationStatusColumn_ToDo extends React.Component {\n    state = { applications : [] };\n\n    render() {\n        return (\n            <div className={styles.area}>\n                <h3>{this.status}</h3>\n                <h3 className={styles.column_title}>To Do</h3>\n                <ApplicationList_ToDo applications={this.state.applications}/>\n            </div>\n        );\n    }\n}\n\nclass ApplicationStatusColumn_InProgress extends React.Component {\n    state = { applications : [] };\n\n    render() {\n        return (\n            <div className={styles.area}>\n                <h3>{this.status}</h3>\n                <h3 className={styles.column_title}>In Progress</h3>\n                <ApplicationList_InProgress applications={this.state.applications}/>\n            </div>\n        );\n    }\n}\n\nclass ApplicationStatusColumn_Completed extends React.Component {\n    state = { applications : [] };\n\n    render() {\n        return (\n            <div className={styles.area}>\n                <h3>{this.status}</h3>\n                <h3 className={styles.column_title}>Completed</h3>\n                <ApplicationList_Completed applications={this.state.applications}/>\n            </div>\n        );\n    }\n}\nclass ApplicationList_ToDo extends React.Component {\n\n    // TODO: Determine amount of applications to show based on how many stored in backend. Each    application column needs to represent different types of applications (e.g. To Do, In Progress, and Completed)\n    state = {items : [<ApplicationLog_Item />, <ApplicationLog_Item />, <ApplicationLog_Item />, <ApplicationLog_Item />]}\n\n    render() {\n        return (\n            <div>\n                <React.Fragment>\n                    {this.state.items}\n                </React.Fragment>\n            </div>\n        )\n    }\n}\n\nclass ApplicationList_InProgress extends React.Component {\n\n    // TODO: Determine amount of applications to show based on how many stored in backend. Each    application column needs to represent different types of applications (e.g. To Do, In Progress, and Completed)\n    state = {items : [<ApplicationLog_Item />, <ApplicationLog_Item />, <ApplicationLog_Item />, <ApplicationLog_Item />]}\n\n    render() {\n        return (\n            <div>\n                <React.Fragment>\n                    {this.state.items}\n                </React.Fragment>\n            </div>\n        )\n    }\n}\n\nclass ApplicationList_Completed extends React.Component {\n\n    // TODO: Determine amount of applications to show based on how many stored in backend. Each    application column needs to represent different types of applications (e.g. To Do, In Progress, and Completed)\n    state = {items : [<ApplicationLog_Item />, <ApplicationLog_Item />, <ApplicationLog_Item />, <ApplicationLog_Item />]}\n\n    render() {\n        return (\n            <div>\n                <React.Fragment>\n                    {this.state.items}\n                </React.Fragment>\n            </div>\n        )\n    }\n}\n\n// defines one application item\nclass ApplicationLog_Item extends React.Component {\n    // state = {\n    //     company : \"\",\n    //     position : \"\",\n    //     jobpostinglink: \"\",\n    //     status: \"\",\n    //     result: \"\",\n    //     deadline: \"\",\n    // };\n\n    state = {\n        company: \"Apple\", \n        position: \"Sofware Developer Intern\",\n        jobpostinglink: \"https://careers.apple.com/student\",\n        status : \"Completed\",\n        result : \"Accepted\",\n        deadline: \"02.21.2021\"\n    };\n\n    applicationItem = (\n        <div className={styles.application_item}>\n            <h4> {this.state.company} </h4>\n            <h4> {this.state.position} </h4>\n            <a href={this.state.jobpostinglink} > {this.state.jobpostinglink} </a>\n            <h4> {this.state.deadline} </h4>\n        </div>\n    );\n  \n    render() {\n        return this.applicationItem;\n    }\n}\n\n    export default ApplicationLog;\n// export default {\n//     ApplicationLog,\n//     ApplicationStatusColumn,\n//     ApplicationLog_Item,\n// }","/Users/maxmohammadi/CSC307/JobMe/src/components/Header.js",["42","43","44","45"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Header extends React.Component {\n\n    // hard coded data to get started\n    page = 'ApplicationLog'\n    username = 'User';\n    // num_applications = 10;\n\n    // dashboard header\n    dashboard_header = (\n      <div>\n        <h2>Hi there, {this.username}.</h2>\n        <h1>Let's make some moves.</h1>\n      </div>\n    );\n  \n    //application log header\n    application_log_header = (\n        <div>\n          <h1>My Applications</h1>\n          <h2>{this.acknowledge_apps}</h2>\n        </div>\n    );\n    // acknowledge_apps = () => {\n    //     if(this.num_applications > 2)\n    //         return \"Wow, look at them all!\"\n    //     else\n    //         return 'Nevermind'\n    // };\n\n    // new application header\n    application_new_header = (\n        <div>\n          <h1>Add a New Application</h1>\n          <h2>You're on a roll.</h2>\n        </div>\n    );\n\n    render() {\n        if(this.page == 'Dashboard')\n            return this.dashboard_header;\n        if(this.page == 'ApplicationLog')\n            return this.application_log_header;\n        if(this.page == 'ApplicationNew')\n            return this.application_new_header;\n        \n        // return error;\n    }\n  }\n\n  export default Header;\n  ","/Users/maxmohammadi/CSC307/JobMe/src/components/Navbar.js",["46","47","48","49","50","51","52","53","54","55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":30,"column":25,"nodeType":"67","endLine":30,"endColumn":110},{"ruleId":"65","severity":1,"message":"68","line":33,"column":25,"nodeType":"67","endLine":33,"endColumn":101},{"ruleId":"65","severity":1,"message":"69","line":36,"column":25,"nodeType":"67","endLine":36,"endColumn":100},{"ruleId":"65","severity":1,"message":"70","line":53,"column":17,"nodeType":"67","endLine":53,"endColumn":79},{"ruleId":"65","severity":1,"message":"71","line":67,"column":17,"nodeType":"67","endLine":67,"endColumn":85},{"ruleId":"65","severity":1,"message":"72","line":81,"column":17,"nodeType":"67","endLine":81,"endColumn":84},{"ruleId":"65","severity":1,"message":"73","line":89,"column":23,"nodeType":"67","endLine":89,"endColumn":46},{"ruleId":"65","severity":1,"message":"73","line":89,"column":48,"nodeType":"67","endLine":89,"endColumn":71},{"ruleId":"65","severity":1,"message":"73","line":89,"column":73,"nodeType":"67","endLine":89,"endColumn":96},{"ruleId":"65","severity":1,"message":"73","line":89,"column":98,"nodeType":"67","endLine":89,"endColumn":121},{"ruleId":"65","severity":1,"message":"73","line":105,"column":23,"nodeType":"67","endLine":105,"endColumn":46},{"ruleId":"65","severity":1,"message":"73","line":105,"column":48,"nodeType":"67","endLine":105,"endColumn":71},{"ruleId":"65","severity":1,"message":"73","line":105,"column":73,"nodeType":"67","endLine":105,"endColumn":96},{"ruleId":"65","severity":1,"message":"73","line":105,"column":98,"nodeType":"67","endLine":105,"endColumn":121},{"ruleId":"65","severity":1,"message":"73","line":121,"column":23,"nodeType":"67","endLine":121,"endColumn":46},{"ruleId":"65","severity":1,"message":"73","line":121,"column":48,"nodeType":"67","endLine":121,"endColumn":71},{"ruleId":"65","severity":1,"message":"73","line":121,"column":73,"nodeType":"67","endLine":121,"endColumn":96},{"ruleId":"65","severity":1,"message":"73","line":121,"column":98,"nodeType":"67","endLine":121,"endColumn":121},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":42,"column":22,"nodeType":"76","messageId":"77","endLine":42,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":44,"column":22,"nodeType":"76","messageId":"77","endLine":44,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":46,"column":22,"nodeType":"76","messageId":"77","endLine":46,"endColumn":24},{"ruleId":"61","severity":1,"message":"78","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"61","severity":1,"message":"79","line":6,"column":28,"nodeType":"63","messageId":"64","endLine":6,"endColumn":36},{"ruleId":"61","severity":1,"message":"80","line":7,"column":28,"nodeType":"63","messageId":"64","endLine":7,"endColumn":37},{"ruleId":"61","severity":1,"message":"81","line":8,"column":28,"nodeType":"63","messageId":"64","endLine":8,"endColumn":36},{"ruleId":"61","severity":1,"message":"82","line":12,"column":28,"nodeType":"63","messageId":"64","endLine":12,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":46,"column":13,"nodeType":"67","endLine":46,"endColumn":87},{"ruleId":"61","severity":1,"message":"85","line":56,"column":12,"nodeType":"63","messageId":"64","endLine":56,"endColumn":22},{"ruleId":"61","severity":1,"message":"86","line":57,"column":12,"nodeType":"63","messageId":"64","endLine":57,"endColumn":22},{"ruleId":"61","severity":1,"message":"87","line":64,"column":14,"nodeType":"63","messageId":"64","endLine":64,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":71,"column":13,"nodeType":"67","endLine":71,"endColumn":118},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component ApplicationStatusColumn_ToDo must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component ApplicationStatusColumn_InProgress must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ApplicationStatusColumn_Completed must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ApplicationList_ToDo must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ApplicationList_InProgress must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ApplicationList_Completed must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ApplicationLog_Item must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CSSTransition' is defined but never used.","'BellIcon' is defined but never used.","'ArrowIcon' is defined but never used.","'BoltIcon' is defined but never used.","'MessengerIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'activeMenu' is assigned a value but never used.","'menuHeight' is assigned a value but never used.","'calcHeight' is defined but never used.","no-global-assign","no-unsafe-negation"]